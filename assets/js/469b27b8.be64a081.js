"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[4579],{9528:(e,a,d)=>{d.r(a),d.d(a,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>t});var n=d(4848),i=d(8453);const o={},r="UnidadDaoControl",s={id:"tutorial-extras/UnidadDaoControl",title:"UnidadDaoControl",description:"La clase UnidadDaoControl es una clase que extiende de DaoAdapter y est\xe1 dise\xf1ada para manejar las operaciones de acceso a datos (DAO) para la entidad Unidad. Esta clase encapsula la l\xf3gica necesaria para interactuar con los datos de Unidad, proporcionando m\xe9todos para guardar, eliminar y fusionar unidades.",source:"@site/docs/tutorial-extras/UnidadDaoControl.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/UnidadDaoControl",permalink:"/documentacion-PIS/docs/tutorial-extras/UnidadDaoControl",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-extras/UnidadDaoControl.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RubricaCalificacionDaoControl",permalink:"/documentacion-PIS/docs/tutorial-extras/RubricaDaoControl"},next:{title:"UsuarioDaoControl",permalink:"/documentacion-PIS/docs/tutorial-extras/UsuarioDaoControl"}},l={},t=[{value:"Constructor",id:"constructor",level:3},{value:"Propiedad: _unidad",id:"propiedad-_unidad",level:3},{value:"Propiedad: _lista",id:"propiedad-_lista",level:3},{value:"M\xe9todo: save",id:"m\xe9todo-save",level:3},{value:"M\xe9todo: delete",id:"m\xe9todo-delete",level:3},{value:"M\xe9todo: merge",id:"m\xe9todo-merge",level:3}];function c(e){const a={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"unidaddaocontrol",children:"UnidadDaoControl"}),"\n",(0,n.jsxs)(a.p,{children:["La clase ",(0,n.jsx)(a.code,{children:"UnidadDaoControl"})," es una clase que extiende de ",(0,n.jsx)(a.code,{children:"DaoAdapter"})," y est\xe1 dise\xf1ada para manejar las operaciones de acceso a datos (DAO) para la entidad ",(0,n.jsx)(a.code,{children:"Unidad"}),". Esta clase encapsula la l\xf3gica necesaria para interactuar con los datos de ",(0,n.jsx)(a.code,{children:"Unidad"}),", proporcionando m\xe9todos para guardar, eliminar y fusionar unidades."]}),"\n",(0,n.jsx)(a.h3,{id:"constructor",children:"Constructor"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"def __init__(self):\r\n    super().__init__(Unidad)\r\n    self.__unidad = None\n"})}),"\n",(0,n.jsxs)(a.p,{children:["El constructor de la clase inicializa la clase base ",(0,n.jsx)(a.code,{children:"DaoAdapter"})," con la entidad ",(0,n.jsx)(a.code,{children:"Unidad"}),". Tambi\xe9n define un atributo privado ",(0,n.jsx)(a.code,{children:"__unidad"})," que se utilizar\xe1 para almacenar una instancia de ",(0,n.jsx)(a.code,{children:"Unidad"}),"."]}),"\n",(0,n.jsx)(a.h3,{id:"propiedad-_unidad",children:"Propiedad: _unidad"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"@property\r\ndef _unidad(self):\r\n    if self.__unidad is None:\r\n        self.__unidad = Unidad()\r\n    return self.__unidad\r\n\r\n@_unidad.setter\r\ndef _unidad(self, value):\r\n    self.__unidad = value\n"})}),"\n",(0,n.jsxs)(a.p,{children:["Esta propiedad proporciona acceso al atributo privado ",(0,n.jsx)(a.code,{children:"__unidad"}),". Si el atributo no ha sido inicializado, crea una nueva instancia de ",(0,n.jsx)(a.code,{children:"Unidad"}),". Tambi\xe9n incluye un setter para permitir la asignaci\xf3n de un valor a ",(0,n.jsx)(a.code,{children:"__unidad"}),"."]}),"\n",(0,n.jsx)(a.h3,{id:"propiedad-_lista",children:"Propiedad: _lista"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"@property\r\ndef _lista(self):\r\n    return self._list()\n"})}),"\n",(0,n.jsxs)(a.p,{children:["Esta propiedad devuelve la lista de ",(0,n.jsx)(a.code,{children:"Unidad"})," utilizando el m\xe9todo ",(0,n.jsx)(a.code,{children:"_list"})," de la clase base ",(0,n.jsx)(a.code,{children:"DaoAdapter"}),"."]}),"\n",(0,n.jsx)(a.h3,{id:"m\xe9todo-save",children:"M\xe9todo: save"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'@property    \r\ndef save(self):\r\n    self.__unidad._id = self._lista._length + 1\r\n    print("Guardando Unidad")\r\n    self._save(self.__unidad)\n'})}),"\n",(0,n.jsxs)(a.p,{children:["El m\xe9todo ",(0,n.jsx)(a.code,{children:"save"})," asigna un nuevo ID a la instancia de ",(0,n.jsx)(a.code,{children:"Unidad"})," basada en la longitud de la lista de unidades actuales, incrementando en uno el \xfaltimo ID existente. Luego, imprime un mensaje de confirmaci\xf3n y llama al m\xe9todo ",(0,n.jsx)(a.code,{children:"_save"})," de la clase base para guardar la instancia."]}),"\n",(0,n.jsx)(a.h3,{id:"m\xe9todo-delete",children:"M\xe9todo: delete"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"def delete(self):\r\n    self._delete(self.__unidad) \n"})}),"\n",(0,n.jsxs)(a.p,{children:["El m\xe9todo ",(0,n.jsx)(a.code,{children:"delete"})," elimina una ",(0,n.jsx)(a.code,{children:"Unidad"})," en la posici\xf3n especificada utilizando el m\xe9todo ",(0,n.jsx)(a.code,{children:"_delete"})," de la clase base."]}),"\n",(0,n.jsx)(a.h3,{id:"m\xe9todo-merge",children:"M\xe9todo: merge"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"def merge(self):\r\n     self._merge(self.__unidad)\n"})}),"\n",(0,n.jsxs)(a.p,{children:["El m\xe9todo ",(0,n.jsx)(a.code,{children:"merge"})," actualiza una ",(0,n.jsx)(a.code,{children:"Unidad"})," en la posici\xf3n especificada utilizando el m\xe9todo ",(0,n.jsx)(a.code,{children:"_merge"})," de la clase base y la instancia actual de ",(0,n.jsx)(a.code,{children:"__unidad"}),"."]})]})}function u(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,a,d)=>{d.d(a,{R:()=>r,x:()=>s});var n=d(6540);const i={},o=n.createContext(i);function r(e){const a=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:a},e.children)}}}]);