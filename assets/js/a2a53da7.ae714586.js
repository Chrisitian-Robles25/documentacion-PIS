"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[8337],{8043:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>t,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(4848),i=r(8453);const o={sidebar_position:2},d="Metodo de busqueda",s={id:"TDA/MetodoBusqueda",title:"Metodo de busqueda",description:"Clase: SequentialBinarySearch",source:"@site/docs/TDA/MetodoBusqueda.md",sourceDirName:"TDA",slug:"/TDA/MetodoBusqueda",permalink:"/documentacion-PIS/docs/TDA/MetodoBusqueda",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/TDA/MetodoBusqueda.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Metodo de ordenaci\xf3n",permalink:"/documentacion-PIS/docs/TDA/MetodoOrdenacion"},next:{title:"Nodo de una lista enlazada",permalink:"/documentacion-PIS/docs/TDA/NodeLinkedList"}},t={},l=[{value:"Clase: SequentialBinarySearch",id:"clase-sequentialbinarysearch",level:2},{value:"M\xe9todo: search",id:"m\xe9todo-search",level:3},{value:"M\xe9todo: search_models",id:"m\xe9todo-search_models",level:3}];function c(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"metodo-de-busqueda",children:"Metodo de busqueda"}),"\n",(0,n.jsx)(a.h2,{id:"clase-sequentialbinarysearch",children:"Clase: SequentialBinarySearch"}),"\n",(0,n.jsxs)(a.p,{children:["La clase ",(0,n.jsx)(a.code,{children:"SequentialBinarySearch"})," implementa m\xe9todos para realizar b\xfasquedas secuenciales y binarias en arrays y listas de objetos."]}),"\n",(0,n.jsx)(a.h3,{id:"m\xe9todo-search",children:"M\xe9todo: search"}),"\n",(0,n.jsxs)(a.p,{children:["Este m\xe9todo busca un valor espec\xedfico (",(0,n.jsx)(a.code,{children:"data"}),") en un array ordenado (",(0,n.jsx)(a.code,{children:"array"}),"). Si encuentra el valor, expande la b\xfasqueda hacia la izquierda y la derecha para encontrar todas las ocurrencias del valor en el array y las retorna en una lista."]}),"\n",(0,n.jsx)(a.p,{children:"Par\xe1metros:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"array"})," (list): El array en el que se realizar\xe1 la b\xfasqueda."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"data"})," (any): El valor que se est\xe1 buscando.\r\nRetorno:"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"arr"})," (list): Lista con todas las ocurrencias del valor data en el array."]}),"\n"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"def search(self, array, data):\r\n    inicio = 0\r\n    fin = len(array) - 1\r\n    arr = []\r\n    while inicio <= fin:\r\n        medio = (inicio + fin) // 2\r\n        if array[medio] == data:\r\n            # Expandir hacia la izquierda\r\n            aux = medio\r\n            while aux >= 0 and array[aux] == data:\r\n                arr.append(array[aux])\r\n                aux -= 1\r\n            # Expandir hacia la derecha\r\n            aux = medio + 1\r\n            while aux < len(array) and array[aux] == data:\r\n                arr.append(array[aux])\r\n                aux += 1\r\n            return arr\r\n        else:\r\n            if data < array[medio]:\r\n                fin = medio - 1\r\n            else:\r\n                inicio = medio + 1\n"})}),"\n",(0,n.jsx)(a.h3,{id:"m\xe9todo-search_models",children:"M\xe9todo: search_models"}),"\n",(0,n.jsxs)(a.p,{children:["Este m\xe9todo busca un valor espec\xedfico (",(0,n.jsx)(a.code,{children:"data"}),") en una lista de objetos (",(0,n.jsx)(a.code,{children:"array"}),") basada en un atributo espec\xedfico (",(0,n.jsx)(a.code,{children:"attribute"}),"). Si encuentra el valor, expande la b\xfasqueda hacia la izquierda y la derecha para encontrar todas las ocurrencias del valor en el atributo y las retorna en una lista."]}),"\n",(0,n.jsx)(a.p,{children:"Par\xe1metros:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"array"})," (list): La lista de objetos en la que se realizar\xe1 la b\xfasqueda."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"data"})," (any): El valor que se est\xe1 buscando."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"attribute"})," (str): El nombre del atributo en los objetos de la lista sobre el cual se realizar\xe1 la b\xfasqueda.\r\nRetorno:"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"arr"})," (list): Lista con todas las ocurrencias del valor data en el atributo especificado de los objetos en la lista."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"None"}),": Si no se encuentra ninguna ocurrencia del valor data."]}),"\n"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"def search_models(self, array, data, attribute):\r\n    inicio = 0\r\n    fin = len(array) - 1\r\n    arr = []\r\n\r\n    while inicio <= fin:\r\n        medio = (inicio + fin) // 2\r\n        if getattr(array[medio], attribute) == data:\r\n            # Recorrer hacia la izquierda\r\n            aux = medio\r\n            while aux >= 0 and getattr(array[aux], attribute) == data:\r\n                arr.append(array[aux])\r\n                aux -= 1\r\n\r\n            # Recorrer hacia la derecha\r\n            aux = medio + 1\r\n            while aux < len(array) and getattr(array[aux], attribute) == data:\r\n                arr.append(array[aux])\r\n                aux += 1\r\n            return arr\r\n        else:\r\n            if data < getattr(array[medio], attribute):\r\n                fin = medio - 1\r\n            else:\r\n                inicio = medio + 1\r\n\r\n    return None\r\n\n"})})]})}function u(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>d,x:()=>s});var n=r(6540);const i={},o=n.createContext(i);function d(e){const a=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(o.Provider,{value:a},e.children)}}}]);